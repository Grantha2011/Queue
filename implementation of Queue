#include <iostream>
using namespace std;

class Queue {
private:
    int* arr;
    int n;
    int front;
    int rear;
public:
    Queue(int size) {
        arr = new int[size];
        n = size;
        front = -1;
        rear = -1;
    }

    void push(int val) {
        if (rear == n - 1) {
            cout << "overflow" << endl;
        }
        else if (front == -1 && rear == -1) {
            // Insertion of first element
            rear++;
            front++;
            arr[rear] = val;
        }
        else {
            // Normal insertion
            rear++;
            arr[rear] = val;
        }
    }

    void pop() {
        if (front == -1 && rear == -1) {
            cout << "underflow" << endl;
        }
        else if (front == rear) {
            // Single element in queue
            arr[rear] = -1;
            front = -1;
            rear = -1;
        }
        else {
            // Normal pop
            arr[front] = -1;
            front++;
        }
    }

    int getfront() {
        if (front == -1) {
            cout << "queue is empty" << endl;
            return -1;
        }
        else {
            return arr[front];
        }
    }

    int getrear() {
        if (rear == -1) {
            cout << "queue is empty" << endl;
            return -1;
        }
        else {
            return arr[rear];
        }
    }

    int getsize() {
        if (front == -1 && rear == -1) {
            return 0;
        }
        else {
            return rear - front + 1;
        }
    }

    bool isempty() {
        return (front == -1 && rear == -1);
    }
};

int main() {
    Queue q(5);
    q.push(10);  // 10
    q.push(20);  // 20 10
    q.push(30);  // 30 20 10
    q.push(40);  // 40 30 20 10
    q.push(50);  // 50 40 30 20 10
    q.push(60);  // overflow

    cout << "Size: " << q.getsize() << endl;  // Should print size as 5

    q.pop();  // 10 should be popped

    cout << "Rear: " << q.getrear() << endl;  // Should print 50
    cout << "Front: " << q.getfront() << endl;  // Should print 20
    cout << "Size: " << q.getsize() << endl;  // Should print size as 4

    return 0;
}
